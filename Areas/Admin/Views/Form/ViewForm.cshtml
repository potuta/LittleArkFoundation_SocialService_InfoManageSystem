@using LittleArkFoundation.Areas.Admin.Models.Form
@model HtmlFormViewModel
@{
    ViewData["Title"] = "View Form";
    Layout = "_AdminLayout";
}

<h2>View Form</h2>
<hr />

<!-- Back to List -->
<div class="mt-2">
    <a class="btn btn-outline-secondary mb-3" asp-controller="Form" asp-action="Index">← Back to List</a>
</div>

<!-- Page Containers -->
@for (int i = 0; i < Model.HtmlPages.Count; i++)
{
    <div id="page@(i + 1)" class="form-page" style="display: @(i == 0 ? "block" : "none");">
        @Html.Raw(Model.HtmlPages[i])
    </div>
}

<!-- Navigation Buttons -->
<div class="btn-group btn-group-sm mt-3" role="group" aria-label="Small button group">
    <button type="button" id="prevPage" class="btn btn-outline-primary" onclick="changePage(-1)" disabled><</button>

    @for (int i = 0; i < Model.HtmlPages.Count; i++)
    {
        <button type="button" id="navPage@(i + 1)" class="btn btn-outline-primary @(i == 0 ? "active" : "")" onclick="jumpToPage(@(i + 1))">@(@i + 1)</button>
    }

    <button type="button" id="nextPage" class="btn btn-outline-primary" onclick="changePage(1)">></button>
</div>

<!-- Form for PDF Download -->
<form asp-action="DownloadPDF" method="post" class="mt-3">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@Model.Id" />
    <input type="hidden" name="assessmentID" value="@Model.AssessmentID" />
    <a class="btn btn-sm btn-success" asp-action="Edit" asp-route-id="@Model.Id" asp-route-assessmentID="@Model.AssessmentID">Edit</a>
    <button type="submit" class="btn btn-sm btn-primary">Download PDF</button>
</form>

@section Scripts {
    <script>
        let currentPage = 1;
        const totalPages = @Model.HtmlPages.Count;

        function changePage(step) {
            document.getElementById(`page${currentPage}`).style.display = "none";
            currentPage += step;
            document.getElementById(`page${currentPage}`).style.display = "block";

            for (let i = 1; i <= totalPages; i++) {
                document.getElementById(`navPage${i}`).classList.remove("active");
            }

            document.getElementById(`navPage${currentPage}`).classList.add("active");

            document.getElementById("prevPage").disabled = currentPage === 1;
            document.getElementById("nextPage").disabled = currentPage === totalPages;
        }

        function jumpToPage(pageNum) {
            document.getElementById(`page${currentPage}`).style.display = "none";
            currentPage = pageNum;
            document.getElementById(`page${currentPage}`).style.display = "block";

            for (let i = 1; i <= totalPages; i++) {
                document.getElementById(`navPage${i}`).classList.remove("active");
            }

            document.getElementById(`navPage${currentPage}`).classList.add("active");

            document.getElementById("prevPage").disabled = currentPage === 1;
            document.getElementById("nextPage").disabled = currentPage === totalPages;
        }
    </script>
}
