@using LittleArkFoundation.Areas.Admin.Models.Form
@using System.Security.Claims
@model FormViewModel

<div class="section-title">PROGRESS NOTES</div>
<table id="progressnotes-table">
    <tr>
        <th>
            MSW
        </th>
        <th>
            DATE
        </th>
        <th>
            PROGRESS NOTES
        </th>
        <th>
            ATTACHMENT
        </th>
        <th>
            Actions
        </th>
    </tr>
    <tbody class="progressnotes-input">
        @for (int i = 0; i < Model.ProgressNotes.Count; i++)
        {
            <tr>
                @{
                    var hasFile = Model.ProgressNotes[i].Attachment != null && Model.ProgressNotes[i].Attachment.Length > 0;
                    var contentType = Model.ProgressNotes[i].AttachmentContentType ?? "";
                    bool isPdf = contentType == "application/pdf";
                    bool isImage = contentType.StartsWith("image/");
                }

                <td>
					<input type="hidden" asp-for="ProgressNotes[i].UserID"/>

                    <input type="text" 
					   value="@(Model.Users.FirstOrDefault(u => u.UserID == Model.ProgressNotes[i].UserID)?.Username ?? "Unknown User")"
					   class="text-muted" 
					   style="background-color:#e9ecef; cursor: not-allowed;" 
					   readonly />
                </td>

                <td>
                    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ProgressNotes[i].UserID.ToString())
                    {
                        <input type="date" asp-for="ProgressNotes[i].Date" required>
                    }
                    else
                    {
                        <input type="date" asp-for="ProgressNotes[i].Date"
							class="text-muted" 
							style="background-color:#e9ecef; cursor: not-allowed;" 
							readonly>
                    }
                </td>

                <td>
                    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ProgressNotes[i].UserID.ToString())
                    {
                        <textarea asp-for="ProgressNotes[i].ProgressNotes" rows="2" cols="30" placeholder="Type N/A if no answer" required></textarea>
                    }
                    else
                    {
                        <textarea asp-for="ProgressNotes[i].ProgressNotes" rows="2" cols="30" placeholder="Type N/A if no answer"
							class="text-muted" 
							style="background-color:#e9ecef; cursor: not-allowed;" 
							readonly>
						</textarea>
                    }
                </td>

                <td>

                    <input type="hidden" asp-for="ProgressNotes[i].Attachment" id="attachment-@i" />
                    <input type="hidden" asp-for="ProgressNotes[i].AttachmentContentType" id="attachmentContentType-@i" />
                    <input type="hidden" asp-for="ProgressNotes[i].RemoveAttachment" id="removeAttachment-@i" />

                    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ProgressNotes[i].UserID.ToString())
                    {
						@if (hasFile)
						{
							<input type="file" asp-for="ProgressNotes[i].AttachmentFile" id="uploadedFile-@i"
								   accept=".pdf,image/png,image/jpeg,image/jpg"
								   class="form-control mb-2"
								   style="display: none;"
								   onchange="handleFileUpload(this, @i)" disabled />
						}
						else
						{
							<input type="file" asp-for="ProgressNotes[i].AttachmentFile" id="uploadedFile-@i"
								   accept=".pdf,image/png,image/jpeg,image/jpg"
								   class="form-control mb-2"
								   onchange="handleFileUpload(this, @i)" />
                        }
                    }
                    else
                    {
                        <input type="file" asp-for="ProgressNotes[i].AttachmentFile" id="uploadedFile-@i"
								   accept=".pdf,image/png,image/jpeg,image/jpg"
								   class="form-control mb-2"
								   style="display: none;"
								   onchange="handleFileUpload(this, @i)" disabled />    
                    }

                    <div id="previewContainer-@i" class="d-flex justify-content-center align-items-center gap-2" style="@(hasFile ? "" : "display: none;")">
                        <button type="button" 
                            class="btn btn-dark" 
                            data-bs-toggle="modal" 
                            data-bs-target="#filePreviewModal-@i"
                            title="View File">
                            <i class="bi bi-eye"></i>
                        </button>
                        <a href="@Url.Action("GetProgressNoteFile", "Form", new { id = Model.ProgressNotes[i].ProgressNotesID, isDownload = true })"
                           style="@(hasFile ? "" : "display: none;")"
                           class="btn btn-primary" 
                           id="downloadFile-@i"
                           target="_blank"
                            title="Download File">
                            <i class="bi bi-file-earmark-arrow-down"></i>
                        </a>
                        @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ProgressNotes[i].UserID.ToString())
                        {
							<button type="button" 
								class="btn btn-danger"
								title="Delete File"
								onclick="if (confirm('Are you sure you want to remove this file?')) removeFile(@i);">
								<i class="bi bi-trash"></i>
                            </button>
                        }
                        else
                        {
                            <button type="button" 
								class="btn btn-danger"
								onclick="if (confirm('Are you sure you want to remove this file?')) removeFile(@i);"
                                title="Not allowed to delete other user's progress notes file"
                                disabled>
								<i class="bi bi-trash"></i>
                            </button>
                        }
                    </div>

                    <!-- File Display Modal -->
                    <div class="modal fade" id="filePreviewModal-@i" tabindex="-1" aria-labelledby="filePreviewModalLabel-@i" aria-hidden="true">
                        <div class="modal-dialog modal-xl modal-dialog-centered">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="filePreviewModalLabel-@i">File Preview</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center" id="filePreviewContent-@i">
                                    @if (Model.ProgressNotes[i].Attachment != null && Model.ProgressNotes[i].Attachment.Length > 0)
                                    {
                                        if (isPdf)
                                        {
                                            <iframe src="@Url.Action("GetProgressNoteFile", "Form", new { id = Model.ProgressNotes[i].ProgressNotesID })"
                                                    type="application/pdf"
                                                    width="100%" height="600px" style="border:none;">
                                            </iframe>

                                        }
                                        else if (isImage)
                                        {
                                            <img src="@Url.Action("GetProgressNoteFile", "Form", new { id = Model.ProgressNotes[i].ProgressNotesID })"
                                                 style="max-width:100%; max-height:600px;" alt="Uploaded image" />
                                        }
                                        else
                                        {
                                            <p>File preview not supported.</p>
                                        }
                                    }

                                </div>
                            </div>
                        </div>
                    </div>

                </td>

                @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.ProgressNotes[i].UserID.ToString())
                {
					<td>
                        <button type="button" 
						id="progressnotes-button-remove"
						class="d-flex justify-content-center align-items-center"
                        onclick="removeRow(this)">❌</button>
                    </td>
                }
                else
                {
                   <td>
                        <button type="button" 
						id="progressnotes-button-remove"
						class="d-flex justify-content-center align-items-center"
                        onclick="removeRow(this)"
                        title="Not allowed to remove progress notes of other users"
                        disabled>❌</button>
                    </td> 
                }
            </tr>
        }
    </tbody>

</table>
<button type="button" id="progressnotes-button-add" onclick="addRow(this)">➕ Add Row</button>