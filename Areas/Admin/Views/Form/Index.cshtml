@using LittleArkFoundation.Areas.Admin.Models.Patients
@using System.Security.Claims
@model PatientsViewModel
@{
    ViewData["Title"] = "Admission";
    Layout = "_AdminLayout";
    bool isActive = ViewBag.isActive ?? true;
}

<style>
    .menu-bar a {
        min-width: 100px;
        text-align: center;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

    .header-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        margin-bottom: 1rem;
    }

        .header-bar h2 {
            margin-bottom: 0;
        }

    .sticky-col {
        position: sticky;
        left: 0;
        background: white;
        box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    }


</style>


<div class="header-bar">
    <h2>Admission</h2>

    <div class="menu-bar d-flex gap-2">
        <!-- Main -->
        <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["controller"]?.ToString() == "Form" &&
           (
               ViewContext.RouteData.Values["action"]?.ToString() == "Index" ||
               ViewContext.RouteData.Values["action"]?.ToString() == "SortBy" || 
               ViewContext.RouteData.Values["action"]?.ToString() == "Search"
           ) ? "active" : "")"
           asp-action="Index" asp-controller="Form">Main</a>

        <!-- General -->
        <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["controller"]?.ToString() == "GeneralAdmission"
           ? "active" : "")"
           asp-action="Index" asp-controller="GeneralAdmission">General</a>

        <a class="btn btn-outline-dark @(
            ViewContext.RouteData.Values["controller"]?.ToString() == "GeneralAdmission" &&
            (
                ViewContext.RouteData.Values["action"]?.ToString() == "Reports" ||
                ViewContext.RouteData.Values["action"]?.ToString() == "SortByReports"
            ) ? "active" : "")"
           asp-action="Reports" asp-controller="GeneralAdmission">Reports</a>

        <!-- Statistics -->
        <a class="btn btn-outline-dark @(
                               ViewContext.RouteData.Values["controller"]?.ToString() == "GeneralAdmission" &&
                                   (
                                       ViewContext.RouteData.Values["action"]?.ToString() == "Statistics" ||
                                       ViewContext.RouteData.Values["action"]?.ToString() == "SortByStatistics"
                                   ) ? "active" : "")"
           asp-action="Statistics" asp-controller="GeneralAdmission">Statistics</a>
    </div>
</div>
<hr />

<div class="search-container">
    <form asp-action="Search" asp-route-isActive="@isActive" asp-route-page="@Model.CurrentPage" asp-route-pageSize="@Model.PageSize" asp-controller="Form">
        <div class="input-group">
            <input type="search" name="searchString" class="form-control" placeholder="Search by Id/FullName" aria-label="Search">
            <button type="submit" class="btn btn-dark"
            data-bs-toggle="tooltip"
            title="Search">
                <i class="bi bi-search"></i> 
            </button>
        </div>
    </form>
    <a class="btn btn-primary" asp-action="Index" asp-controller="Form"><i class="bi bi-arrow-clockwise"></i></a>
</div>

<div class="d-flex justify-content-between align-items-center flex-wrap">

    @* Left toggles/buttons *@
    <div class="d-flex align-items-center gap-3">
        @if (isActive)
        {
            @if (User.HasClaim("Permission", "CreateForm"))
            {
                <a class="btn btn-success hide-when-archived" asp-action="Create" asp-controller="Form">
                    <i class="bi bi-file-earmark-plus"></i> Create New
                </a>
            }
            else
            {
                <a class="btn btn-success text-muted hide-when-archived"
                   style="cursor: not-allowed;"
                   aria-disabled="true"
                   tabindex="-1"
                   title="You do not have permission to Create New">
                    <i class="bi bi-file-earmark-plus"></i> Create New
                </a>
            }
        }

        <div class="btn-group btn-group-toggle" data-toggle="buttons">
            <a asp-action="Index" asp-controller="Form" asp-route-isActive="true" 
            asp-route-page="@Model.CurrentPage" asp-route-pageSize="@Model.PageSize"
            class="btn btn-secondary @(isActive ? "active" : "")">
                <div class="custom-radio">
                    <input type="radio" style="accent-color: dodgerblue" value="main" @(isActive ? "checked" : "")>
                    <label style="margin-bottom: 0">Active</label>
                </div>
            </a>
            <a asp-action="Index" asp-controller="Form" asp-route-isActive="false"
               asp-route-page="@Model.CurrentPage" asp-route-pageSize="@Model.PageSize" 
               class="btn btn-secondary @(isActive ? "" : "active")">
                <div class="custom-radio">
                    <input type="radio" style="accent-color: dodgerblue" value="archive" @(isActive ? "" : "checked")>
                    <label style="margin-bottom: 0">Discharged</label>
                </div>
            </a>
        </div>
    </div>

</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th class="sticky-col" style="width: 100%; left: 0; z-index: 2;">Actions</th>
                        <th>PatientID</th>
                        <th>FirstName</th>
                        <th>MiddleName</th>
                        <th>LastName</th>
                        <th>DateOfBirth</th>
                        <th>Age</th>
                        <th>Sex</th>
                        <th>ContactNo</th>
                        <th>PlaceOfBirth</th>
                        <th>Gender</th>
                        <th>Religion</th>
                        <th>Nationality</th>
                        <th>PermanentAddress</th>
                        <th>TemporaryAddress</th>
                        <th>CivilStatus</th>
                        <th>EducationLevel</th>
                        <th>Occupation</th>
                        <th>MonthlyIncome</th>
                        <th>PhilhealthPIN</th>
                        <th>PhilhealthMembership</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var patient in Model.Patients)
                    {
                        var assessment = Model.Assessments
                        .Where(a => a.PatientID == patient.PatientID)
                        .OrderByDescending(a => a.Id)
                        .ThenByDescending(a => a.DateOfInterview)
                        .ThenByDescending(a => a.TimeOfInterview)
                        .FirstOrDefault();

					    var mswdclassification = Model.MSWDClassifications
					    .FirstOrDefault(m => m.PatientID == assessment.PatientID && m.AssessmentID == assessment.AssessmentID);

                        var userIdName = User.FindFirst(ClaimTypes.Name);
                        var userId = User.FindFirst(ClaimTypes.NameIdentifier);
                        <tr>
                            <td class="sticky-col d-flex gap-1" style="white-space: nowrap; left: 0; z-index: 1;">
                                <a href="@Url.Action("ViewHistory", new { id = patient.PatientID })" 
                                    class="btn btn-dark text-white"
                                    data-bs-toggle="tooltip"
                                    title="View History">
                                        <i class="bx bx-history"></i>
                                </a>
                                @if (isActive)
                                {
                                    <a href="@Url.Action("ViewForm", new { id = patient.PatientID, assessmentID = assessment.AssessmentID })" 
                                        class="btn btn-primary"
                                        data-bs-toggle="tooltip"
                                        title="View Form">
                                            <i class="bx bx-file" ></i>
                                    </a>

                                    @if (User.HasClaim("Permission", "EditForm"))
                                    {
                                        <a href="@Url.Action("Edit", new { id = patient.PatientID, assessmentID = assessment.AssessmentID })"
                                           class="btn btn-success hide-when-archived"
                                            data-bs-toggle="tooltip"
                                            title="Edit">
                                                <i class="bx bx-edit"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-success text-muted hide-when-archived"
                                           style="cursor: not-allowed;"
                                           aria-disabled="true"
                                           tabindex="-1"
                                           title="You do not have permission to Edit">
                                            <i class="bx bx-edit"></i>
                                        </a>
                                    }

                                    @if (User.HasClaim("Permission", "DischargePatient"))
                                    {
                                        <a href="#"
                                           class="btn btn-danger hide-when-archived"
                                           data-bs-toggle="modal"
                                           data-bs-toggle="tooltip"
                                           title="Discharge"
                                           data-bs-target="#dischargeModal"
                                           data-patient-id="@patient.PatientID"
                                           data-patient-assessmentID="@assessment.AssessmentID"
                                           data-patient-fn="@patient.FirstName"
                                           data-patient-mn="@patient.MiddleName"
                                           data-patient-ln="@patient.LastName"
                                           data-patient-ward="@assessment.BasicWard"
                                           data-patient-class="@mswdclassification.SubClassification"
                                           data-userID="@userId.Value"
                                           data-msw="@userIdName.Value">
                                            <i class="bi bi-box-arrow-right"></i> 
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-danger text-muted hide-when-archived"
                                           style="cursor: not-allowed;"
                                           aria-disabled="true"
                                           tabindex="-1"
                                           title="You do not have permission to Discharge Patient">
                                            <i class="bi bi-box-arrow-right"></i>
                                        </a>
                                    }

                                }
                                else
                                {
                                    @if (User.HasClaim("Permission", "CreateForm"))
                                    {
                                        <a href="@Url.Action("ReAdmitPatient", "Discharge", new { area = "Admin", id = patient.PatientID, assessmentID = assessment.AssessmentID })"
                                           class="btn btn-success hide-when-archived"
                                           onclick="return confirmLinkClick(this.href, 'Confirm Re-Admission', 'Are you sure you want to re-admit this patient?');">
                                           Re-Admit
                                       </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-success text-muted hide-when-archived"
                                           style="cursor: not-allowed;"
                                           aria-disabled="true"
                                           tabindex="-1"
                                           title="You do not have permission to Re-Admit Patient">
                                            Re-Admit
                                        </a>
                                    }
                                }
                            </td>
                            <td style="white-space: nowrap;">@patient.PatientID</td>
                            <td style="white-space: nowrap;">@patient.FirstName</td>
                            <td style="white-space: nowrap;">@patient.MiddleName</td>
                            <td style="white-space: nowrap;">@patient.LastName</td>
                            <td style="white-space: nowrap;">@patient.DateOfBirth</td>
                            <td style="white-space: nowrap;">@assessment.Age.ToString("0.##")</td>
                            <td style="white-space: nowrap;">@patient.Sex</td>
                            <td style="white-space: nowrap;">@assessment.ContactNo</td>
                            <td style="white-space: nowrap;">@patient.PlaceOfBirth</td>
                            <td style="white-space: nowrap;">@assessment.Gender</td>
                            <td style="white-space: nowrap;">@assessment.Religion</td>
                            <td style="white-space: nowrap;">@patient.Nationality</td>
                            <td style="max-width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@assessment.PermanentAddress</td>
                            <td style="max-width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">@assessment.TemporaryAddress</td>
                            <td style="white-space: nowrap;">@assessment.CivilStatus</td>
                            <td style="white-space: nowrap;">@assessment.EducationLevel</td>
                            <td style="white-space: nowrap;">@assessment.Occupation</td>
                            <td style="white-space: nowrap;">@assessment.MonthlyIncome</td>
                            <td style="white-space: nowrap;">@assessment.PhilhealthPIN</td>
                            <td style="white-space: nowrap;">@assessment.PhilhealthMembership</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<!-- Discharge Modal -->

<div class="modal fade" id="dischargeModal" tabindex="-1" aria-labelledby="dischargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Patient Discharge</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="dischargeForm" asp-area="Admin" asp-action="DischargePatient" asp-controller="Discharge" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" asp-for="Discharge.PatientID" id="dischargePatientID" />
                    <input type="hidden" asp-for="Discharge.AssessmentID" id="dischargeAssessmentID" />
                    <input type="hidden" asp-for="Discharge.UserID" id="dischargeUserID" />
                    <div class="row g-3">
                        <div class="col-md-4">
                            <label>First Name</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" asp-for="Discharge.FirstName" id="dischargeFirstName" readonly />
                        </div>
                        <div class="col-md-4">
                            <label>Middle Name</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" asp-for="Discharge.MiddleName" id="dischargeMiddleName" readonly />
                        </div>
                        <div class="col-md-4">
                            <label>Last Name</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" asp-for="Discharge.LastName" id="dischargeLastName" readonly />
                        </div>

                        <div class="col-md-4">
                            <label>Ward</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" asp-for="Discharge.Ward" id="dischargeWard" readonly />
                        </div>
                        <div class="col-md-4">
                            <label>Class</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" asp-for="Discharge.Class" id="dischargeClass" readonly />
                        </div>

                        <div class="col-md-4">
                            <label>Date Processed</label>
                            <input type="date" class="form-control" asp-for="Discharge.ProcessedDate" id="dischargeProcessedDate" required/>
                        </div>
                        <div class="col-md-4">
                            <label>Date of Discharged</label>
                            <input type="date" class="form-control" asp-for="Discharge.DischargedDate" id="dischargeDischargedDate" required/>
                        </div>

                        <div class="col-md-4">
                            <label>Received HB</label>
                            <input type="time" id="receivedHB" class="form-control"  asp-for="Discharge.ReceivedHB" required />
                        </div>
                        <div class="col-md-4">
                            <label>Issued MSS</label>
                            <input type="time" id="issuedMSS" class="form-control"  asp-for="Discharge.IssuedMSS" required />
                        </div>
                        <div class="col-md-4">
                            <label>Duration</label>
                            <div class="d-flex justify-content-center align-items-center">
								<input type="hidden" id="durationHidden" class="form-control" asp-for="Discharge.Duration" />
								<input type="number" id="duration" class="form-control" required />
								<select class="form-select" id="durationOptions">
									<option value="Minutes">Minutes</option>
									<option value="Hours">Hours</option>
									<option value="Days">Days</option>
									<option value="Seconds">Seconds</option>
								</select>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label>PHIC Category</label>
                            <select class="form-select" asp-for="Discharge.PHICCategory">
                                <option>Indigent</option>
                                <option>SSS</option>
                                <option>GSIS</option>
                                <option>POS-NCH</option>
                                <option>Self-Employed</option>
                                <option>None</option>

                            </select>
                        </div>
                        <div class="col-md-4">
                            <label>PHIC Used</label>
                            <select class="form-select" id="phicUsed" asp-for="Discharge.PHICUsed">
                                <option value="true">Yes</option>
                                <option value="false">No</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label>MSW</label>
                            <input type="text" class="form-control text-muted" style="cursor: not-allowed;" id="dischargeMSW" asp-for="Discharge.MSW" readonly />
                        </div>

                        <div class="col-12" id="remarksContainer">
                            <label>Remarks (If No)</label>
                            <textarea class="form-control" rows="2" id="remarksTextArea" asp-for="Discharge.RemarksIfNo" placeholder="N/A if no answer" required></textarea>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger" onclick="confirmDischarge()">Confirm Discharge</button>
            </div>
        </div>
    </div>
</div>

@{
    int totalPages = Model.TotalPages.Value;
    int currentPage = Model.CurrentPage.Value;
    int pageWindow = 5; // how many pages to show around current page
    int startPage = Math.Max(1, currentPage - pageWindow / 2);
    int endPage = Math.Min(totalPages, startPage + pageWindow - 1);
    if (endPage - startPage < pageWindow)
    {
        startPage = Math.Max(1, endPage - pageWindow + 1);
    }
}

<div class="container-fluid px-0 mx-0 mt-3" style="max-width: 1400px;">
    @if (totalPages > 1)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center flex-nowrap">
                <!-- Previous button -->
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" aria-label="Previous" asp-action="Index" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@Model.PageSize">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>

                <!-- First page -->
                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="1" asp-route-pageSize="@Model.PageSize">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                <!-- Middle pages -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                    </li>
                }

                <!-- Last page -->
                @if (endPage < totalPages)
                {
                    @if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="Index" asp-route-page="@totalPages" asp-route-pageSize="@Model.PageSize">@totalPages</a>
                    </li>
                }

                <!-- Next button -->
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" aria-label="Next" asp-action="Index" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@Model.PageSize">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<div class="d-flex flex-column align-items-center gap-2 mb-3">

    <!-- Page size dropdown below -->
    <div class="mx-auto">
        <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle d-flex align-items-center gap-1 me-2" data-bs-toggle="dropdown" aria-expanded="false">
            per page: <span class="mb-0">@(Model.PageSize > Model.TotalCount ? Model.TotalCount : Model.PageSize)</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            @if (Model.TotalCount >= 10)
            {
                <li><a class="dropdown-item" asp-action="Index" asp-route-page="1" asp-route-pageSize="10">10</a></li>
            }
            @if (Model.TotalCount >= 20)
            {
                <li><a class="dropdown-item" asp-action="Index" asp-route-page="1" asp-route-pageSize="20">20</a></li>
            }
            @if (Model.TotalCount >= 50)
            {
                <li><a class="dropdown-item" asp-action="Index" asp-route-page="1" asp-route-pageSize="50">50</a></li>
            }
            @if (Model.TotalCount >= 100)
            {
                <li><a class="dropdown-item" asp-action="Index" asp-route-page="1" asp-route-pageSize="100">100</a></li>
            }
            @if (Model.TotalCount > 100)
            {
                <li>
                    <a class="dropdown-item" asp-action="Index" asp-route-page="1" asp-route-pageSize="@Model.TotalCount">
                        @Model.TotalCount
                    </a>
                </li>
            }
        </ul>
    </div>

    <div style="font-size: 13px;">
        <span class="text-muted">Showing @Model.Patients.Count of @(Model.TotalCount == 0 ? Model.Patients.Count : Model.TotalCount) items</span>
    </div>
</div>

@section Scripts {
    <script>

        const dischargeModal = document.getElementById('dischargeModal');

        function localYYYYMMDD(d = new Date()) {
          const yyyy = d.getFullYear();
          const mm = String(d.getMonth() + 1).padStart(2, '0');
          const dd = String(d.getDate()).padStart(2, '0');
          return `${yyyy}-${mm}-${dd}`;
        }

        let dischargeStartTime;

        dischargeModal.addEventListener('show.bs.modal', function (event) {
            const today = localYYYYMMDD();
            document.getElementById("dischargeProcessedDate").value = today;
            document.getElementById("dischargeDischargedDate").value = today;

            const button = event.relatedTarget;
            const patientId = button.getAttribute('data-patient-id');
			const assessmentID = button.getAttribute('data-patient-assessmentID');
            const patientFn = button.getAttribute('data-patient-fn');
            const patientMn = button.getAttribute('data-patient-mn');
            const patientLn = button.getAttribute('data-patient-ln');
            const patientWard = button.getAttribute('data-patient-ward');
            const patientClass = button.getAttribute('data-patient-class');
            const msw = button.getAttribute('data-msw');
			const userID = button.getAttribute('data-userID');

            document.getElementById('dischargePatientID').value = patientId;
            document.getElementById('dischargeAssessmentID').value = assessmentID;
            document.getElementById('dischargeFirstName').value = patientFn;
            document.getElementById('dischargeMiddleName').value = patientMn;
            document.getElementById('dischargeLastName').value = patientLn;
            document.getElementById('dischargeWard').value = patientWard;
            document.getElementById('dischargeClass').value = patientClass || "N/A";
            document.getElementById('dischargeMSW').value = msw;
			document.getElementById('dischargeUserID').value = userID;

            dischargeStartTime = new Date();
            document.getElementById('receivedHB').value = dischargeStartTime.toLocaleTimeString('en-GB').slice(0, 5);
        });

        function confirmDischarge() {
            // const now = new Date();
            // document.getElementById('issuedMSS').value = now.toLocaleTimeString('en-GB').slice(0, 5); 

            // if (dischargeStartTime) {
            //     const diffMs = now - dischargeStartTime;
            //     const diffMins = Math.floor(diffMs / 60000);
            //     const hrs = Math.floor(diffMins / 60);
            //     const mins = diffMins % 60;

            //     let durationText = '';
            //     if (hrs > 0) durationText += `${hrs} hour${hrs !== 1 ? 's' : ''} `;
            //     if (mins > 0 || hrs === 0) durationText += `${mins} minute${mins !== 1 ? 's' : ''}`;

            //     document.getElementById('duration').value = durationText.trim();
            // }

			let duration = parseInt(document.getElementById('duration').value) || 0;
			let durationOption = document.getElementById('durationOptions').value;
            
            if (duration <= 1) {

                switch (durationOption) {
                    case "Minutes":
                        durationOption = "Minute";
                        break;
                    case "Hours":
                        durationOption = "Hour";
                        break;
                    case "Days":
                        durationOption = "Day";
                        break;
                    case "Seconds":
                        durationOption = "Second";
                        break;
                    default:
                        durationOption = durationOption;
				}

				document.getElementById('durationHidden').value = `1 ${durationOption}`;
			}
            else {
				document.getElementById('durationHidden').value = `${duration} ${durationOption}`;
			}

            const form = document.getElementById('dischargeForm');

            if (!form.checkValidity()) {
                form.reportValidity(); // show browser validation
                return;
            }

            // Show custom confirm modal
            showConfirmModal(
                "Confirm Discharge",
                "Are you sure you want to confirm discharge?",
                () => form.requestSubmit() // only called on confirm
            );

        }

        document.getElementById('phicUsed').addEventListener('change', function() {
            const remarksContainer = document.getElementById('remarksContainer');
            const remarksTextArea = document.getElementById('remarksTextArea');
            if (this.value === 'false') {
                remarksContainer.style.display = 'block';
                remarksTextArea.required = true;
            } else {
                remarksContainer.style.display = 'none';
                remarksTextArea.required = false;
                remarksTextArea.value = 'N/A';
            }
		});
       
    </script>


}



