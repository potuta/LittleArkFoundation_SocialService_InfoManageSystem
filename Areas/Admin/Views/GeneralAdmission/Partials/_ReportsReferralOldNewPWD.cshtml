@model LittleArkFoundation.Areas.Admin.Models.GeneralAdmission.GeneralAdmissionViewModel
@{
    // Unique MSWs
    var msws = Model.Users.Select(u => u.Username).Distinct().ToList();

    var groupedClass = new List<string>
    {
        "A", "B", "C1", "C2", "C3", "D"
    };

    var groupedByClass = Model.GeneralAdmissions
        .Where(d => !string.IsNullOrEmpty(d.Class))
        .GroupBy(d => d.Class)
        .ToDictionary(g => g.Key, g => g.ToList());

    var classTotals = msws.ToDictionary(msw => msw, msw => Model.GeneralAdmissions.Count(d => d.MSW == msw));
    var overallClassTotal = Model.GeneralAdmissions.Count;
}

<h5 style="margin-top: 15px;">COUNT of Referral</h5>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>Referral</th>
                        @foreach (var msw in msws)
                        {
                            <th>@msw</th>
                        }
                        <th>Row Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    var statuses = new[] { "Clinic/Private", "Govt. Agencies", "Govt. Hosp.", "HCT", "NGOs", "Others", "Walk in" };
                    var grandTotals = new int[msws.Count];
                    int overallTotal = 0;

                    @foreach (var stats in statuses)
                    {
                        int rowTotal = 0;
                        <tr>
                            <td>@stats</td>
                            @for (int i = 0; i < msws.Count; i++)
                            {
                                var count = Model.GeneralAdmissions.Count(d =>
                                d.Referral.ToUpper() == stats.ToUpper() &&
                                d.MSW == msws[i]  
                                );
                                <td>@count</td>
                                rowTotal += count;
                                grandTotals[i] += count;
                                overallTotal += count;
                            }
                            <td class="fw-bold">@rowTotal</td>
                        </tr>
                    }

                    <tr class="fw-bold">
                        <td>Grand Total</td>
                        @for (int i = 0; i < msws.Count; i++)
                        {
                            <td>@grandTotals[i]</td>
                        }
                        <td>@overallTotal</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<h5 style="margin-top: 15px;">COUNT of Old/New</h5>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>Old</th>
                        <th>New</th>
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var msw in msws)
                    {
                        var oldCount = Model.GeneralAdmissions.Count(d => d.isOld == true && d.MSW == msw);
                        var newCount = Model.GeneralAdmissions.Count(d => d.isOld == false && d.MSW == msw);
                        var totalCount = oldCount + newCount;
                        <tr>
                            <td>@msw</td>
                            <td>@oldCount</td>
                            <td>@newCount</td>
                            <td>@totalCount</td>
                        </tr>
                    }

                    var oldCountAll = Model.GeneralAdmissions.Count(d => d.isOld == true);
                    var newCountAll = Model.GeneralAdmissions.Count(d => d.isOld == false);
                    var totalCountAll = oldCountAll + newCountAll;
                    <tr class="fw-bold">
                        <td>Total</td>
                        <td>@oldCountAll</td>
                        <td>@newCountAll</td>
                        <td>@totalCountAll</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<h5 style="margin-top: 15px;">COUNT of PWD</h5>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>PWD</th>
                        <th>Non-PWD</th>
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var msw in msws)
                    {
                        var pwdCount = Model.GeneralAdmissions.Count(d => d.isPWD == true && d.MSW == msw);
                        var nonPwdCount = Model.GeneralAdmissions.Count(d => d.isPWD == false && d.MSW == msw);
                        var totalCount = pwdCount + nonPwdCount;
                        <tr>
                            <td>@msw</td>
                            <td>@pwdCount</td>
                            <td>@nonPwdCount</td>
                            <td>@totalCount</td>
                        </tr>
                    }
                    var pwdCountAll = Model.GeneralAdmissions.Count(d => d.isPWD == true);
                    var nonPwdCountAll = Model.GeneralAdmissions.Count(d => d.isPWD == false);
                    var totalCountAll = pwdCountAll + nonPwdCountAll;
                    <tr class="fw-bold">
                        <td>Total</td>
                        <td>@pwdCountAll</td>
                        <td>@nonPwdCountAll</td>
                        <td>@totalCountAll</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div> 
