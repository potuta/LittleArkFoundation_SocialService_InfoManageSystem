@model LittleArkFoundation.Areas.Admin.Models.OPD.OPDViewModel

<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>Date</th>
                        <th>Name of Patient</th>
                        <th>Assistance Needed</th>
                        <th>Amount</th>
                        <th>Amount Extended</th>
                        <th>Resources</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var opd in Model.OPDList)
                    {
                        <tr>
                            <td style="white-space: nowrap;">@opd.MSW</td>
                            <td style="white-space: nowrap;">@opd.Date</td>
                            <td style="white-space: nowrap;">@opd.LastName, @opd.FirstName @opd.MiddleName</td>
                            <td style="white-space: nowrap;">@opd.AssistanceNeeded</td>
                            <td style="white-space: nowrap;">@opd.Amount</td>
                            <td style="white-space: nowrap;">@opd.AmountExtended</td>
                            <td style="white-space: nowrap;">@opd.Resources</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@{
    int totalPages = Model.TotalPages.Value;
    int currentPage = Model.CurrentPage.Value;
    int pageWindow = 5; // how many pages to show around current page
    int startPage = Math.Max(1, currentPage - pageWindow / 2);
    int endPage = Math.Min(totalPages, startPage + pageWindow - 1);
    if (endPage - startPage < pageWindow)
    {
        startPage = Math.Max(1, endPage - pageWindow + 1);
    }
}

<div class="container-fluid px-0 mx-0 mt-3" style="max-width: 1400px;">
    @if (totalPages > 1)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center flex-nowrap">
                <!-- Previous button -->
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" aria-label="Previous" 
                    asp-action="Reports" 
                    asp-route-page="@(currentPage - 1)" 
                    asp-route-pageSize="@Model.PageSize"
                    asp-route-sortToggle="@ViewData["sortToggle"]"
                    asp-route-sortByMonth="@ViewData["sortByMonth"]">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>

                <!-- First page -->
                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="Reports" asp-route-page="1" asp-route-pageSize="@Model.PageSize" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                <!-- Middle pages -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" asp-action="Reports" asp-route-page="@i" asp-route-pageSize="@Model.PageSize" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]">@i</a>
                    </li>
                }

                <!-- Last page -->
                @if (endPage < totalPages)
                {
                    @if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="Reports" asp-route-page="@totalPages" asp-route-pageSize="@Model.PageSize" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]">@totalPages</a>
                    </li>
                }

                <!-- Next button -->
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" aria-label="Next" asp-action="Reports" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<div class="d-flex flex-column align-items-center gap-2 mb-3">

    <!-- Page size dropdown below -->
    <div class="mx-auto">
        <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle d-flex align-items-center gap-1 me-2" data-bs-toggle="dropdown" aria-expanded="false">
            per page: <span class="mb-0">@(Model.PageSize > Model.TotalCount ? Model.TotalCount : Model.PageSize)</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            @if (Model.TotalCount >= 10)
            {
                <li><a class="dropdown-item" asp-action="Reports" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]" asp-route-page="1" asp-route-pageSize="10">10</a></li>
            }
            @if (Model.TotalCount >= 20)
            {
                <li><a class="dropdown-item" asp-action="Reports" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]" asp-route-page="1" asp-route-pageSize="20">20</a></li>
            }
            @if (Model.TotalCount >= 50)
            {
                <li><a class="dropdown-item" asp-action="Reports" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]" asp-route-page="1" asp-route-pageSize="50">50</a></li>
            }
            @if (Model.TotalCount >= 100)
            {
                <li><a class="dropdown-item" asp-action="Reports" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]" asp-route-page="1" asp-route-pageSize="100">100</a></li>
            }
            @if (Model.TotalCount > 100)
            {
                <li>
                    <a class="dropdown-item" asp-action="Reports" asp-route-sortToggle="@ViewData["sortToggle"]" asp-route-sortByMonth="@ViewData["sortByMonth"]" asp-route-page="1" asp-route-pageSize="@Model.TotalCount">
                        @Model.TotalCount
                    </a>
                </li>
            }
        </ul>
    </div>

    <div style="font-size: 13px;">
        <span class="text-muted">Showing @Model.OPDList.Count of @(Model.TotalCount == 0 ? Model.OPDList.Count : Model.TotalCount) items</span>
    </div>
</div>
