@model LittleArkFoundation.Areas.Admin.Models.OPD.OPDViewModel
@{
	ViewData["Title"] = "OPD Reports";
	Layout = "_AdminLayout";

    string? sortBy = ViewBag.sortBy ?? "";
    string? sortByUserID = ViewBag.sortByUserID ?? "";
    string? sortByMonth = ViewBag.sortByMonth ?? "";
    bool matchedUser = Model.Users.Any(u => u.Username == sortBy);

    // Unique MSWs
    var msws = Model.Users.Select(u => u.Username).Distinct().ToList();

    // Group discharges by ProcessedDate
    var grouped = Model.OPDList
        .GroupBy(d => d.Date)
        .OrderBy(g => g.Key)
        .ToList();
    var mswTotals = msws.ToDictionary(msw => msw, msw => Model.OPDList.Count(d => d.MSW == msw));
    var overallTotal = Model.OPDList.Count;

    var groupedClass = new List<string>
    {
        "A", "B", "C1", "C2", "C3", "D"
    };

    var groupedByClass = Model.OPDList
        .Where(d => !string.IsNullOrEmpty(d.Class))
        .GroupBy(d => d.Class)
        .ToDictionary(g => g.Key, g => g.ToList());

    var classTotals = msws.ToDictionary(msw => msw, msw => Model.OPDList.Count(d => d.MSW == msw));
    var overallClassTotal = Model.OPDList.Count;
}

<style>
    .menu-bar a {
        min-width: 100px;
        text-align: center;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

    .header-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        margin-bottom: 1rem;
    }

        .header-bar h2 {
            margin-bottom: 0;
        }

</style>

<div class="header-bar">
    <h2>OPD Reports</h2>

    <div class="menu-bar d-flex gap-2">
        <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["action"]?.ToString() == "Index" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SortBy" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "Search"
           ? "active" : "")"
           asp-action="Index" asp-controller="OPD">Main</a>

        @* <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["action"]?.ToString() == "General" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SortByGeneral" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SearchGeneral"
           ? "active" : "")"
           asp-action="General" asp-controller="OPD">General</a> *@

        <a class="btn btn-outline-dark @(ViewContext.RouteData.Values["action"]?.ToString() == "OPDAssisted" ? "active" : "")"
           asp-action="OPDAssisted" asp-controller="OPD">OPD Assisted</a>

        <a class="btn btn-outline-dark @(
            ViewContext.RouteData.Values["action"]?.ToString() == "Reports" ||
            ViewContext.RouteData.Values["action"]?.ToString() == "SortByOPDAssistedAndReports"
            ? "active" : "")"
           asp-action="Reports" asp-controller="OPD">Reports</a>

        <a class="btn btn-outline-dark @(ViewContext.RouteData.Values["action"]?.ToString() == "Statistics" ? "active" : "")"
           asp-action="Statistics" asp-controller="OPD">Statistics</a>
    </div>
</div>
<hr />

<!-- Back to List -->
<div class="mt-2">
    <a class="btn btn-outline-secondary mb-3" asp-controller="OPD" asp-action="Index">← Back to List</a>
</div>

<div class="d-flex justify-content-end align-items-start flex-wrap gap-2 mb-3">
    @* Right toggles/buttons *@
    <div class="btn-group">
        @* <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle d-flex align-items-center gap-1 me-2" data-bs-toggle="dropdown" aria-expanded="false">
            @if (string.IsNullOrEmpty(sortBy))
            {
                <span class="mb-0">Sort by MSW</span>
            }
            else
            {
                <span class="mb-0">@sortBy</span>
            }
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            <li>
                <a class="dropdown-item" asp-action="SortByOPDAssistedAndReports"
                   asp-controller="OPD" asp-route-sortByUserID="" asp-route-sortByMonth="@sortByMonth"
                   asp-route-viewName="Reports">All</a>
            </li>
            @foreach (var user in Model.Users)
            {
                <li>
                    <a class="dropdown-item" asp-action="SortByOPDAssistedAndReports"
                       asp-controller="OPD" asp-route-sortByUserID="@user.UserID" asp-route-sortByMonth="@sortByMonth"
                       asp-route-viewName="Reports">@user.Username</a>
                </li>
            }
        </ul> *@
        @* @if (matchedUser)
        {
            foreach (var user in Model.Users)
            {
                if (user.Username == sortBy)
                {
                    <a class="btn btn-sm btn-success" style="margin-left:5px;"
                       asp-action="ExportLogsheetToExcel"
                       asp-route-userID="@user.UserID">
                        Download Excel (@user.Username)
                    </a>
                }
            }
        }
        else
        {
            <a class="btn btn-sm btn-success" style="margin-left:5px;"
               asp-action="ExportLogsheetToExcel">
                Download Excel (All)
            </a>
        } *@

        @* Month filter *@
        <form method="get" asp-action="SortByOPDAssistedAndReports" class="d-flex align-items-center gap-2">
            <input type="hidden" name="sortByUserID" value="@sortByUserID" />
            <input type="hidden" name="viewName" value="Reports" />
            <input type="month" name="sortByMonth" class="form-control form-control-sm" value="@sortByMonth" />
            <button type="submit" class="btn btn-secondary btn-sm" style="width: 100%;">
                <i class="bi bi-filter"></i> Filter Month
            </button>
        </form>

        <button type="button" class="btn btn-success btn-sm" style="margin-left:5px;"
                data-bs-toggle="modal"
                data-bs-target="#exportModal"
                data-bs-toggle="tooltip"
                title="Download Excel">
            <i class="bi bi-download"></i> Download Excel
        </button>

        <!-- Download/Export Excel Modal -->
        <div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form asp-action="ExportReportsToExcel" asp-controller="OPD" method="get">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exportModalLabel">Export to Excel</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            @* <div class="mb-3">
                                <label for="userID" class="form-label">MSW</label>
                                <select class="form-select" id="userID" name="userID">
                                    <option value="0">All</option>
                                    @foreach (var user in Model.Users)
                                    {
                                        <option value="@user.UserID">@user.Username</option>
                                    }
                                </select>
                            </div> *@

                            <div class="mb-3">
                                <label for="month" class="form-label">Month</label>
                                <input type="month" id="month" name="month" class="form-control">
                                <div class="form-text">Leave empty for "All Time"</div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-success">Export</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>

</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h4 style="margin-top: 15px;">COUNTA of Date Processed by MSW</h4>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>Date Processed</th>
                        @foreach (var msw in msws)
                        {
                            <th>@msw</th>
                        }
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var group in grouped)
                    {
                        <tr>
                            <td>@group.Key.ToShortDateString()</td>

                            @foreach (var msw in msws)
                            {
                                var count = group.Count(d => d.MSW == msw);
                                <td>@count</td>
                            }

                            <td>@group.Count()</td>
                        </tr>
                    }

                    <tr class="fw-bold">
                        <td>Total</td>
                        @foreach (var msw in msws)
                        {
                            <td>@mswTotals[msw]</td>
                        }
                        <td>@overallTotal</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<h4 style="margin-top: 15px;">COUNTA of Class</h4>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>Date Processed</th>
                        @foreach (var msw in msws)
                        {
                            <th>@msw</th>
                        }
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var cls in groupedClass)
                    {
                        <tr>
                            <td>@cls</td>

                            @foreach (var msw in msws)
                            {
                                var count = groupedByClass.ContainsKey(cls)
                                ? groupedByClass[cls].Count(d => d.MSW == msw)
                                : 0;
                                <td>@count</td>
                            }

                            <td>
                                @(groupedByClass.ContainsKey(cls) ? groupedByClass[cls].Count : 0)
                            </td>
                        </tr>
                    }

                    <tr class="fw-bold">
                        <td>Total</td>
                        @foreach (var msw in msws)
                        {
                            <td>@classTotals[msw]</td>
                        }
                        <td>@overallClassTotal</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<h4 style="margin-top: 15px;">COUNTA of Class by Gender</h4>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>Class</th>
                        <th>F</th>
						<th>M</th>
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var cls in groupedClass)
                    {
                        var femaleCount = Model.OPDList.Count(d => d.Class == cls && d.Gender == "Female");
						var maleCount = Model.OPDList.Count(d => d.Class == cls && d.Gender == "Male");
                        <tr>
                            <td>@cls</td>
                            <td>@femaleCount</td>
					        <td>@maleCount</td>
                            @* <td>@Model.OPDList.Count(d => d.Class == cls)</td> *@
							<td>@(femaleCount + maleCount)</td>
                        </tr>
                    }

                    var femaleCountAll = Model.OPDList.Count(d => d.Gender == "Female");
                    var maleCountAll = Model.OPDList.Count(d => d.Gender == "Male");
					var totalCountAll = femaleCountAll + maleCountAll;
                    <tr class="fw-bold">
                        <td>Total</td>
                        <td>@femaleCountAll</td>
						<td>@maleCountAll</td>
						<td>@totalCountAll</td>
                    </tr>
                }
            </tbody>
        </table>
	</div>
</div>

<h4 style="margin-top: 15px;">COUNTA of Old/New</h4>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>Old</th>
                        <th>New</th>
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var msw in msws)
                    {
                        var oldCount = Model.OPDList.Count(d => d.IsOld == true && d.MSW == msw);
                        var newCount = Model.OPDList.Count(d => d.IsOld == false && d.MSW == msw);
                        var totalCount = oldCount + newCount;
                        <tr>
                            <td>@msw</td>
                            <td>@oldCount</td>
                            <td>@newCount</td>
                            <td>@totalCount</td>
                        </tr>
                    }

                    var oldCountAll = Model.OPDList.Count(d => d.IsOld == true);
                    var newCountAll = Model.OPDList.Count(d => d.IsOld == false);
					var totalCountAll = oldCountAll + newCountAll;
                    <tr class="fw-bold">
                        <td>Total</td>
                        <td>@oldCountAll</td>
                        <td>@newCountAll</td>
                        <td>@totalCountAll</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<h4 style="margin-top: 15px;">COUNTA of PWD</h4>
<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>PWD</th>
                        <th>Non-PWD</th>
                        <th>Grand Total</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var msw in msws)
                    {
                        var pwdCount = Model.OPDList.Count(d => d.IsPWD == true && d.MSW == msw);
                        var nonPwdCount = Model.OPDList.Count(d => d.IsPWD == false && d.MSW == msw);
                        var totalCount = pwdCount + nonPwdCount;
                        <tr>
                            <td>@msw</td>
                            <td>@pwdCount</td>
                            <td>@nonPwdCount</td>
                            <td>@totalCount</td>
                        </tr>
                    }
                    var pwdCountAll = Model.OPDList.Count(d => d.IsPWD == true);
                    var nonPwdCountAll = Model.OPDList.Count(d => d.IsPWD == false);
                    var totalCountAll = pwdCountAll + nonPwdCountAll;
                    <tr class="fw-bold">
                        <td>Total</td>
                        <td>@pwdCountAll</td>
                        <td>@nonPwdCountAll</td>
                        <td>@totalCountAll</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
                             