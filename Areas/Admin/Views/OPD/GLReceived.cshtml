@model LittleArkFoundation.Areas.Admin.Models.OPD.OPDViewModel
@{
    ViewData["Title"] = "GLReceived";
    Layout = "_AdminLayout";
    string? sortBy = ViewBag.sortBy ?? "";
    string? sortByUserID = ViewBag.sortByUserID ?? "";
    string? sortByMonth = ViewBag.sortByMonth ?? "";
    bool matchedUser = Model.Users.Any(u => u.Username == sortBy);

}

<style>
    .menu-bar a {
        min-width: 100px;
        text-align: center;
        transition: background-color 0.2s ease, color 0.2s ease;
    }

    .header-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        margin-bottom: 1rem;
    }

        .header-bar h2 {
            margin-bottom: 0;
        }

</style>

<div class="header-bar">
    <h2>OPD GL Received</h2>

    <div class="menu-bar d-flex gap-2">
        <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["action"]?.ToString() == "Index" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SortBy" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "Search"
           ? "active" : "")"
           asp-action="Index" asp-controller="OPD">Main</a>

        @* <a class="btn btn-outline-dark @(
           ViewContext.RouteData.Values["action"]?.ToString() == "General" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SortByGeneral" ||
           ViewContext.RouteData.Values["action"]?.ToString() == "SearchGeneral"
           ? "active" : "")"
           asp-action="General" asp-controller="OPD">General</a> *@

        <a class="btn btn-outline-dark @(
                       ViewContext.RouteData.Values["action"]?.ToString() == "OPDAssisted" ||
                       ViewContext.RouteData.Values["action"]?.ToString() == "SortByOPDAssistedAndReports"
                       ? "active" : "")"
           asp-action="OPDAssisted" asp-controller="OPD">OPD Assisted</a>

        <a class="btn btn-outline-dark @(
                        ViewContext.RouteData.Values["action"]?.ToString() == "GLReceived" ||
                        ViewContext.RouteData.Values["action"]?.ToString() == "SortByGLReceivedAndReports"
                        ? "active" : "")"
           asp-action="GLReceived" asp-controller="OPD">GL Received</a>

        <a class="btn btn-outline-dark @(ViewContext.RouteData.Values["action"]?.ToString() == "Reports" ? "active" : "")"
           asp-action="Reports" asp-controller="OPD">Reports</a>

        <a class="btn btn-outline-dark @(ViewContext.RouteData.Values["action"]?.ToString() == "Statistics" ? "active" : "")"
           asp-action="Statistics" asp-controller="OPD">Statistics</a>
    </div>
</div>
<hr />

<!-- Back to List -->
<div class="mt-2">
    <a class="btn btn-outline-secondary mb-3" asp-controller="OPD" asp-action="Index">← Back to List</a>
</div>

<div class="d-flex justify-content-end align-items-start flex-wrap gap-2 mb-3">
    @* Right toggles/buttons *@
    <div class="btn-group">
        <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle d-flex align-items-center gap-1 me-2" data-bs-toggle="dropdown" aria-expanded="false">
            @if (string.IsNullOrEmpty(sortBy))
            {
                <span class="mb-0">Filter by MSW</span>
            }
            else
            {
                <span class="mb-0">@sortBy</span>
            }
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            <li>
                <a class="dropdown-item" asp-action="SortByGLReceivedAndReports"
                   asp-controller="OPD" asp-route-sortByUserID="" asp-route-sortByMonth="@sortByMonth" asp-route-page="@Model.CurrentPage" asp-route-pageSize="@Model.PageSize"
                   asp-route-viewName="GLReceived">All</a>
            </li>
            @foreach (var user in Model.Users)
            {
                <li>
                    <a class="dropdown-item" asp-action="SortByGLReceivedAndReports"
                       asp-controller="OPD" asp-route-sortByUserID="@user.UserID" asp-route-sortByMonth="@sortByMonth" asp-route-page="@Model.CurrentPage" asp-route-pageSize="@Model.PageSize"
                       asp-route-viewName="GLReceived">@user.Username</a>
                </li>
            }
        </ul>
        @* @if (matchedUser)
        {
            foreach (var user in Model.Users)
            {
                if (user.Username == sortBy)
                {
                    <a class="btn btn-sm btn-success" style="margin-left:5px;"
                       asp-action="ExportLogsheetToExcel"
                       asp-route-userID="@user.UserID">
                        Download Excel (@user.Username)
                    </a>
                }
            }
        }
        else
        {
            <a class="btn btn-sm btn-success" style="margin-left:5px;"
               asp-action="ExportLogsheetToExcel">
                Download Excel (All)
            </a>
        } *@

        @* Month filter *@
        <form method="get" asp-action="SortByGLReceivedAndReports" class="d-flex align-items-center gap-2">
            <input type="hidden" name="page" value="@Model.CurrentPage" />
            <input type="hidden" name="pageSize" value="@Model.PageSize" />
            <input type="hidden" name="sortByUserID" value="@sortByUserID" />
            <input type="hidden" name="viewName" value="GLReceived" />
            <input type="month" name="sortByMonth" class="form-control form-control-sm" value="@sortByMonth" />
            <button type="submit" class="btn btn-secondary btn-sm" style="width: 100%;">
                <i class="bi bi-filter"></i> Filter Month
            </button>
        </form>

        <button type="button" class="btn btn-success btn-sm" style="margin-left:5px;"
                data-bs-toggle="modal"
                data-bs-target="#exportModal"
                data-bs-toggle="tooltip"
                title="Download Excel">
            <i class="bi bi-download"></i> Download Excel
        </button>

        <!-- Download/Export Excel Modal -->
        <div class="modal fade" id="exportModal" tabindex="-1" aria-labelledby="exportModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form asp-action="ExportOPDGLReceivedToExcel" asp-controller="OPD" method="get">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exportModalLabel">Export to Excel</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="userID" class="form-label">MSW</label>
                                <select class="form-select" id="userID" name="userID">
                                    <option value="0">All</option>
                                    @foreach (var user in Model.Users)
                                    {
                                        <option value="@user.UserID">@user.Username</option>
                                    }
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="month" class="form-label">Month</label>
                                <input type="month" id="month" name="month" class="form-control">
                                <div class="form-text">Leave empty for "All Time"</div>
                            </div>
                        </div>

                        <div class="modal-footer">
                            <button type="submit" class="btn btn-success">Export</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </div>

</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="width: 60%;">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>MSW</th>
                        <th>Date</th>
                        <th>Name of Patient</th>
                        <th>Resources</th>
                        <th>Proponent of GL</th>
                        <th>Received GL</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    @foreach (var opd in Model.OPDList)
                    {
                        <tr>
                            <td style="white-space: nowrap;">@opd.MSW</td>
                            <td style="white-space: nowrap;">@opd.Date</td>
                            <td style="white-space: nowrap;">@opd.LastName, @opd.FirstName @opd.MiddleName</td>
                            <td style="white-space: nowrap;">@opd.Resources</td>
                            <td style="white-space: nowrap;">@opd.GLProponent</td>
                            <td style="white-space: nowrap;">@opd.GLAmountReceived</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@{
    int totalPages = Model.TotalPages.Value;
    int currentPage = Model.CurrentPage.Value;
    int pageWindow = 5; // how many pages to show around current page
    int startPage = Math.Max(1, currentPage - pageWindow / 2);
    int endPage = Math.Min(totalPages, startPage + pageWindow - 1);
    if (endPage - startPage < pageWindow)
    {
        startPage = Math.Max(1, endPage - pageWindow + 1);
    }
}

<div class="container-fluid px-0 mx-0 mt-3" style="max-width: 1400px;">
    @if (totalPages > 1)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center flex-nowrap">
                <!-- Previous button -->
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" aria-label="Previous" asp-action="GLReceived" asp-route-page="@(currentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortByMonth="@sortByMonth">
                        <span aria-hidden="true">&laquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>

                <!-- First page -->
                @if (startPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="GLReceived" asp-route-page="1" asp-route-pageSize="@Model.PageSize" asp-route-sortByMonth="@sortByMonth">1</a>
                    </li>
                    @if (startPage > 2)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                }

                <!-- Middle pages -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" asp-action="GLReceived" asp-route-page="@i" asp-route-pageSize="@Model.PageSize" asp-route-sortByMonth="@sortByMonth">@i</a>
                    </li>
                }

                <!-- Last page -->
                @if (endPage < totalPages)
                {
                    @if (endPage < totalPages - 1)
                    {
                        <li class="page-item disabled"><span class="page-link">...</span></li>
                    }
                    <li class="page-item">
                        <a class="page-link" asp-action="GLReceived" asp-route-page="@totalPages" asp-route-pageSize="@Model.PageSize" asp-route-sortByMonth="@sortByMonth">@totalPages</a>
                    </li>
                }

                <!-- Next button -->
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" aria-label="Next" asp-action="GLReceived" asp-route-page="@(currentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortByMonth="@sortByMonth">
                        <span aria-hidden="true">&raquo;</span>
                        <span class="sr-only"></span>
                    </a>
                </li>
            </ul>
        </nav>
    }
</div>

<div class="d-flex flex-column align-items-center gap-2 mb-3">

    <!-- Page size dropdown below -->
    <div class="mx-auto">
        <button type="button" class="btn btn-outline-secondary btn-sm dropdown-toggle d-flex align-items-center gap-1 me-2" data-bs-toggle="dropdown" aria-expanded="false">
            per page: <span class="mb-0">@(Model.PageSize > Model.TotalCount ? Model.TotalCount : Model.PageSize)</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            @if (Model.TotalCount >= 10)
            {
                <li><a class="dropdown-item" asp-action="GLReceived" asp-route-sortByMonth="@sortByMonth" asp-route-page="1" asp-route-pageSize="10">10</a></li>
            }
            @if (Model.TotalCount >= 20)
            {
                <li><a class="dropdown-item" asp-action="GLReceived" asp-route-sortByMonth="@sortByMonth" asp-route-page="1" asp-route-pageSize="20">20</a></li>
            }
            @if (Model.TotalCount >= 50)
            {
                <li><a class="dropdown-item" asp-action="GLReceived" asp-route-sortByMonth="@sortByMonth" asp-route-page="1" asp-route-pageSize="50">50</a></li>
            }
            @if (Model.TotalCount >= 100)
            {
                <li><a class="dropdown-item" asp-action="GLReceived" asp-route-sortByMonth="@sortByMonth" asp-route-page="1" asp-route-pageSize="100">100</a></li>
            }
            @if (Model.TotalCount > 100)
            {
                <li>
                    <a class="dropdown-item" asp-action="GLReceived" asp-route-sortByMonth="@sortByMonth" asp-route-page="1" asp-route-pageSize="@Model.TotalCount">
                        @Model.TotalCount
                    </a>
                </li>
            }
        </ul>
    </div>

    <div style="font-size: 13px;">
        <span class="text-muted">Showing @Model.OPDList.Count of @(Model.TotalCount == 0 ? Model.OPDList.Count : Model.TotalCount) items</span>
    </div>
</div>
