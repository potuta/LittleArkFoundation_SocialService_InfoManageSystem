@using LittleArkFoundation.Areas.Admin.Models.Database
@model DatabaseViewModel
@{
    ViewData["Title"] = "View Backup Files";
    Layout = "_AdminLayout";
}

<h2>View Backup Files</h2>
<hr />

<!-- Back to List -->
<div class="mt-2">
    <a class="btn btn-outline-secondary mb-3" asp-action="Index">
        <i class="bi bi-arrow-left-square"></i> Back to List
    </a>
</div>

<div class="container-fluid px-0 mx-0" style="max-width: 1600px;">
    <div class="table-responsive" style="overflow-x: auto;">
        <table class="table" style="min-width: 1200px;">
            <thead>
                @if (Model != null)
                {
                    <tr>
                        <th>Database Name</th>
                        <th>Date (<i>YYYY/MM/DD</i>)</th>
                        <th>Time (<i>HH:MM:SS</i>)</th>
                    </tr>
                }
            </thead>
            <tbody>
                @if (Model != null)
                {
                    var latestFiles = new Dictionary<string, DateTime>();

                    // First pass: build latestFiles dictionary
                    foreach (var file in Model.DatabaseBackupFiles)
                    {
                        var fileNameParts = file.Split('_');

                        if (fileNameParts.Length < 3)
                            continue;

                        string namePart;
                        DateTime fullDateTime;

                        try
                        {
                            if (fileNameParts.Length == 6)
                            {
                                namePart = $"{fileNameParts[0]}_{fileNameParts[1]}_{fileNameParts[2]}";
                                fullDateTime = DateTime.ParseExact(fileNameParts[3] + fileNameParts[4], "yyyyMMddHHmmss", null);
                            }
                            else
                            {
                                namePart = $"{fileNameParts[0]}_{fileNameParts[1]}";
                                fullDateTime = DateTime.ParseExact(fileNameParts[2] + fileNameParts[3], "yyyyMMddHHmmss", null);
                            }

                            if (!latestFiles.ContainsKey(namePart) || latestFiles[namePart] < fullDateTime)
                            {
                                latestFiles[namePart] = fullDateTime;
                            }
                        }
                        catch
                        {
                            continue;
                        }
                    }

                    // Second pass: render the table
                    @foreach (var file in Model.DatabaseBackupFiles)
                    {
                        var fileNameParts = file.Split('_');

                        if (fileNameParts.Length < 3)
                        {
                            continue; // Skip files that do not have enough parts to be valid (e.g. "MSWD_DB")
                        }

                        string namePart = "";
                        string datePart = "";
                        string timePart = "";
                        DateTime fullDateTime;

                        try
                        {
                            if (fileNameParts.Length == 6)
                            {
                                namePart = $"{fileNameParts[0]}_{fileNameParts[1]}_{fileNameParts[2]}";
                                fullDateTime = DateTime.ParseExact(fileNameParts[3] + fileNameParts[4], "yyyyMMddHHmmss", null);
                                datePart = DateTime.ParseExact(fileNameParts[3], "yyyyMMdd", null).ToString("yyyy/MM/dd");
                                timePart = DateTime.ParseExact(fileNameParts[4], "HHmmss", null).ToString("HH:mm:ss");
                            }
                            else if (fileNameParts.Length == 5)
                            {
                                namePart = $"{fileNameParts[0]}_{fileNameParts[1]}";
                                fullDateTime = DateTime.ParseExact(fileNameParts[2] + fileNameParts[3], "yyyyMMddHHmmss", null);
                                datePart = DateTime.ParseExact(fileNameParts[2], "yyyyMMdd", null).ToString("yyyy/MM/dd");
                                timePart = DateTime.ParseExact(fileNameParts[3], "HHmmss", null).ToString("HH:mm:ss");
                            }
                            else
                            {
                                continue;
                            }
                        }
                        catch
                        {
                            continue; // Skip files that do not match the expected format
                        }

                        <tr>
                            <td style="white-space: nowrap;">
                                @namePart
                                @{
                                    if (fileNameParts.Length == 6 || fileNameParts.Length == 5)
                                    {
                                        if (latestFiles.ContainsKey(namePart) && latestFiles[namePart] == fullDateTime)
                                        {
                                            <span class="badge bg-success ms-2">Latest</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary ms-2">Old</span>
                                        }
                                    }
                                }
                            </td>
                            <td style="white-space: nowrap;">@datePart</td>
                            <td style="white-space: nowrap;">@timePart</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
